# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

input_number:
  electricity_cost_tariff_1:
    name: "Elektriciteitskosten Tarief 1"
    min: 0
    max: 1
    step: 0.00001
    unit_of_measurement: "€"
    mode: box
  electricity_cost_tariff_2:
    name: "Elektriciteitskosten Tarief 2"
    min: 0
    max: 1
    step: 0.00001
    unit_of_measurement: "€"
    mode: box
  electricity_profit:
    name: "Elektriciteitsopbrengst na Salderen"
    min: -1
    max: 0
    step: 0.00001
    unit_of_measurement: "€"
    mode: box
  electricity_tax_per_kwh:
    name: "Elektriciteit belasting per kWh"
    min: 0
    max: 1
    step: 0.00001
    unit_of_measurement: "€"
    mode: box
  electricity_fixed_fee_day:
    name: "Elektriciteit vastrecht per dag"
    min: 0
    max: 10
    step: 0.00001
    unit_of_measurement: "€"
    mode: box       
  electricity_fixed_return_day:
    name: "Teruggave Energiebelasting per dag"
    min: -10
    max: 0
    step: 0.00001
    unit_of_measurement: "€"
    mode: box      
        
template:
  - sensor:
      - name: "Energie Electriciteitskosten"
        unique_id: energy_electricitycost_id
        unit_of_measurement: "€"
        state: >
            {% set balance_tariff_1 = states('sensor.electricity_meter_consumption_tariff_1_since_contract_start') | float(0) - states('sensor.electricity_meter_production_tariff_1_since_contract_start') | float(0) %}
            {% set balance_tariff_2 = states('sensor.electricity_meter_consumption_tariff_2_since_contract_start') | float(0) - states('sensor.electricity_meter_production_tariff_2_since_contract_start') | float(0) %}
            {% set total_balance = balance_tariff_1 + balance_tariff_2 %}
            {% if total_balance > 0 %}
                {% set energytax = total_balance * states('input_number.electricity_tax_per_kwh') | float(0) %}
            {% else %}
                {% set energytax = 0 %}
            {% endif %}
            {% set dayssincestart = ((as_timestamp(now()) - as_timestamp(states('input_datetime.energycontract_startdate'))) / 60 /1440) | round(0) %}
            {% set fixed_fee = dayssincestart * states('input_number.electricity_fixed_fee_day') | float(0) | float(0) %}
            {% set fixed_fee_return = dayssincestart * states('input_number.electricity_fixed_return_day') | float(0) | float(0) %}
            {% set balancing = 0 %}
            {% if balance_tariff_1 > 0 %}
                {% set energiecost_tariff_1 = balance_tariff_1 * states('input_number.electricity_cost_tariff_1') | float(0) %}
            {% else %}
                {% set energiecost_tariff_1 = 0 %}
                {% set balancing = balancing + balance_tariff_1 %}
            {% endif %}
            {% if (balance_tariff_2 + balancing) > 0 %}
                {% set energiecost_tariff_2 = balance_tariff_2 * states('input_number.electricity_cost_tariff_2') | float(0) %}
                {% set balancing = 0 %}
            {% else %}
                {% set energiecost_tariff_2 = 0 %}
                {% set balancing = balancing + balance_tariff_2 %}
            {% endif %}
            {% set balancing = -1 * balancing * states('input_number.electricity_profit') | float(0) %}
            {{ fixed_fee + energytax + fixed_fee_return + balancing + energiecost_tariff_1 + energiecost_tariff_2}}


utility_meter:
  electricity_meter_consumption_tariff_1_since_contract_start:
    unique_id: electricity_meter_consumption_tariff_1_since_contract_start_id
    source: sensor.energy_consumption_tarif_1
    cycle: yearly
  electricity_meter_consumption_tariff_2_since_contract_start:
    unique_id: electricity_meter_consumption_tariff_2_since_contract_start_id
    source: sensor.energy_consumption_tarif_2
    cycle: yearly
  electricity_meter_production_tariff_1_since_contract_start:
    unique_id: electricity_meter_production_tariff_1_since_contract_start_id
    source: sensor.energy_production_tarif_1
    cycle: yearly
  electricity_meter_production_tariff_2_since_contract_start:
    unique_id: electricity_meter_production_tariff_2_since_contract_start_id
    source: sensor.energy_production_tarif_2
    cycle: yearly
    
input_datetime:
  energycontract_startdate:
    name: "Startdatum Energiecontract"
    has_date: true
    has_time: false
    